#!/usr/bin/env node

var chokidar = require('chokidar');
var watch    = require('ok_dev_watch');
var exec     = require("child_process").exec;
var spawn    = require("child_process").spawn;
var _        = require('underscore');

var shell = watch.shell;

// ****************************************************************
// ****************** Start watching... ***************************
// ****************************************************************

var watchers = [];
var dir = function (paths) {
  var w = chokidar.watch(paths, {ignored: /^\./, persistent: true});
  watchers.push(w);
  return w;
};


dir( ["lib", "routes", "templates"] ).on('change', function (filename) {
  console.log("changed: " + filename);
  shutdown_server(function () {
    console.log("\nRe-starting server...");
    restart_server();
  });
});

dir(["test"]).on('change', function (filename) {
  console.log("test: " + filename);
});

dir(["bin/watch"]).on('change', function () {
  console.log("\nFile bin/watch has changed. Exiting.");
  shutdown();
});

var public = "public/assets/css";

dir("stylus_css").on('change', function (file_name) {
  watch.shell("stylus " + file_name + " -o " + public, function () {});
}).on('unlink', function (style) {
  var css = stylus_to_css(style);
  shell("trash-put " + css, function () {
    console.log("  removed: " + css, "\n");
  });
});

dir(public).on('change', function (style) {
  var css    = stylus_to_css(style);
  if (style !== css) {
    shell("mv " + style + " " + css, function () {
      console.log("  moved to:" + css, "\n");
    });
  }
});

// console.log("Watching: ", watch.dirs.join(', '), "\n");

function stylus_to_css(style) {
  return style.replace(".stylus.css", ".css").replace(".styl", ".css");
}

function shutdown_server(func) {
  exec('bin/stop', function (err, so, se) {
    watch.print_stdio(so, se);
    if (err && !err.message.indexOf("no process found")) {
      console.log("Exiting because: " + err);
      process.exit(1);
    }
    func();
  });
}

function restart_server(func) {

  var server = spawn("bin/restart");
  server.stdout.on('data', function (data) {
    process.stdout.write("" + data);
  });

  server.stderr.on('data', function (data) {
    process.stdout.write("" + data);
  });

  server.on('close', function (code) {
    console.log('server closed: ' + code);
  });

  if (func)
    func();
}

function shutdown() {
  shutdown_server(function () {
    _.each(watchers, function (w) {
      w.close();
    });
    // process.exit(0);
  });
}

restart_server();
process.on('SIGINT',  shutdown);
process.on('SIGTERM', shutdown);







