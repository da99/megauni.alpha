#!/usr/bin/env bash
# -*- bash -*-
#
#
# === Examples:
#     template model Screen_Name "new/file.rb"
#     template test  Screen_Name "tests/Screen_Name/new/file.rb"
#     template test  Screen_Name "tests/Screen_Name/new/file.rb" create
#
#     template create => 01-create
#     template read   => 02-read
#

action="$1"
shift

set -u -e -o pipefail

# ====================
if [[ -z "$@" ]]; then
  case "$action" in 
    create)
      echo "01-create"
      ;;
    read)
      echo "02-read"
      ;;
    update)
      echo "03-update"
      ;;
    trash)
      echo "04-trash"
      ;;
    delete)
      echo "05-delete"
      ;;
    up_create)
      echo "06-up_create"
      ;;
    *)
      echo "XX-$action"
      ;;
  esac

  exit 0
fi # =================

class="$1"
shift

new_file="$1"
shift

sub_action="$@"
tmpl="Server/Okdoki/templates/$action.rb"
instance="$(echo $class | tr '[A-Z]' '[a-z]')"

if [[ -f "$new_file" ]]
then
  $yellow "=== already exists: $new_file"
else

  # === Create the dir(s) if needed:
  mkdir -p "$(dirname "$new_file")"

  # === Replace template "vars":
  sed "s/MODEL/$class/g"  "$tmpl" >> "$new_file"
  sed "s/!model/$instance/g"           -i "$new_file"
  sed "s/!action/$action/g"            -i "$new_file"

  if [[ ! -z "$sub_action" ]]
  then
    sed "s/!sub_action/$sub_action/g"  -i "$new_file"
  fi

  # === Show finish message:
  echo "=== created: $new_file"
fi # === if file exists or not


