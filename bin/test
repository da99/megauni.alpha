#!/usr/bin/env bash
# -*- bash -*-
#
# Examples:
#    bin/test
#    bin/test -n string
#    bin/test partial_file_name
#   bin/test MODEL
#
# --- These are all equivalent:
#
#   bin/bundle exec bacon Server/MODEL/specs/0X-action.rb
#   bin/test              Server/MODEL/specs/0X-action.rb
#   bin/test   MODEL action
#
# --- or with `bin/migrate reset`:
#   bin/test   reset      Server/MODEL/specs/0X-action.rb
#
#   bin/test fast
#   bin/test Screen_Name create  # === fast implied
#
#

source bin/env
set -u -e -o pipefail

files=""
opts=""
helpers="Server/Okdoki/specs/helpers.rb"
cmd="bin/bundle exec bacon $helpers "

# ==============================================================
# http://www.ibm.com/developerworks/aix/library/au-learningtput/
green_bg=$(tput setb 2)
white=$(tput setaf 7)
bold_white_on_green=$(tput bold)${white}${green_bg}
bold_white=$(tput bold)${white}

reset_color=$(tput sgr0)
# ==============================================================


if [[ ! "$@" == *\ * ]]; then
  files="$( find specs/www -maxdepth 1 -type f -regextype posix-extended -regex '.*[0-9]{4}.*'$@'.*\.rb' )"
  if [[ -f "$files" ]]; then
    shift
  fi
fi

if [[ ! -f "$files" ]]; then
  files="$(find specs/www -maxdepth 1 -type f -iname "*.rb" )"
fi

if [[ -z "$files" ]]; then
  colorize yellow "No tests found." 1>&2
  exit 0
fi

# === Stop the server at the end
trap "bin/server stop" EXIT

# === Start server:
bin/server start
bundle exec bacon specs/libs/main.rb $files "$@"



exit 0


# =======================================================
# ==== Okdoki ===========================================
# =======================================================

if [[ "$1" == "reset" ]]; then
  do_migrate=true
  bin/migrate reset > /dev/null
  shift
else
  do_migrate=false
fi

# Find first file in Server/$1/specs/*-$2.rb
# Then exit.
set +u
fast_files="$( echo Server/$1/specs/*-$2.rb )"
set -u
for f in $fast_files; do
  if [[ -f "$f" ]]; then
    shift # -- file name
    shift # -- action name
    echo $cmd $f "$@"
    $cmd $f "$@"
    exit 0
  fi
done

set +u
fast_dir="Server/$1/specs"
set -u
files=()
if [[ -d "$fast_dir" ]]; then
  shift # -- model name
  for f in "$fast_dir"/*-*.rb
  do
    files+=("$f")
  done

  echo $cmd $@ ${files[@]}
  echo ""
  $cmd $@ ${files[@]}
  exit 0
fi

# --- if regular test file to pass to bacon:
if [[ ! -z "$@" ]]
then
  $cmd "$@"
  exit 0
fi

# --- Run all files:
. bin/model_list
test_mods=( Ok "${mods[@]}" )
files=()
for m in ${test_mods[@]}
do
  for f in Server/$m/specs/*-*.rb
  do
    if [[ -f "$f" ]]; then
      files+=("$f")
    fi
  done
done # === mod loop

echo $cmd ${files[@]} Server/Okdoki/specs/multi-unit/*
echo ""
$cmd ${files[@]} Server/Okdoki/specs/multi-unit/*






