#!/usr/bin/env bash
# -*- bash -*-
#
# Examples:
#    bin/model create Chat
#    bin/model file   Chat Chat_Room_Fav
#

cmd="$1"
class="$2"
instance="$(echo $class | tr '[A-Z]' '[a-z]')"

set -u -e -o pipefail

compile_all () {
  mkdir -p Server/$class/model
  mkdir -p tests/$class


  tmpl="Server/Ok/templates/model.rb"
  template model "Server/$class/model.rb"

  tmpl="Server/Ok/templates/model.action.rb"
  template create "Server/$class/model/create.rb"
  template read   "Server/$class/model/read.rb"
  template update "Server/$class/model/update.rb"
  template trash  "Server/$class/model/trash.rb"
  template delete "Server/$class/model/delete.rb"

  tmpl="Server/Ok/templates/routes.rb"
  template route "Server/$class/routes.rb"

  tmpl="Server/Ok/templates/test.rb"
  template test "tests/$class/01-create.rb"    "create"
  template test "tests/$class/02-read.rb"      "read"
  template test "tests/$class/03-update.rb"    "update"
  template test "tests/$class/04-trash.rb"     "trash"
  template test "tests/$class/05-delete.rb"    "delete"

}

template () {
  action="$1"
  shift

  new_file="$1"
  shift

  sub_action="$@"

  if [[ -f "$new_file" ]]
  then
    $yellow "=== already exists: $new_file"
  else
    sed "s/MODEL/$class/g"  "$tmpl" >> "$new_file"
    sed "s/!model/$instance/g"           -i "$new_file"
    sed "s/!action/$action/g"            -i "$new_file"
    if [[ ! -z "$sub_action" ]]
    then
      sed "s/!sub_action/$sub_action/g"    -i "$new_file"
    fi
    echo "=== created: $new_file"
  fi

}


case "$cmd" in
  create)
    compile_all
    ;;

  *)
    echo "Unknown command: $@"
    exit 1
    ;;

esac


