#!/usr/bin/env node

// Create databases: okdoki, okdoki_comments, okdoki_follows

var db             = require('okdoki/lib/POSTGRESQL');
var show_databases = db.show_databases;
var _              = require('underscore');
var cmd            = (process.argv[2] || 'nothing');
var is_reset       = cmd === 'reset';
var is_up          = is_reset || cmd === 'up';
var is_down        = is_reset || cmd === 'down';
var is_list        = cmd === 'list';

if (!is_up && !is_down && !is_list) {
  console.log('Unknown cmd: ' + process.argv[2]);
  process.exit(1);
}

show_databases(function (names) {

  if (cmd === 'list') {
    console.log('DBs: ' + names.join(', '));
    return true;
  }

  var ok = new db.query();
  var ok_c = new db.query('/okdoki_comments');
  var ok_f = new db.query('/okdoki_follows');

  _.each(names, function (n, i) {
    if (n.indexOf('customer-') === 0 || n.indexOf('customer_') === 0) {
      ok.q('DROP DATABASE "' + n + '"' );
    };
  });

  if (is_down) {
    ok.q('DROP EXTENSION IF EXISTS hstore');
    ok.q('DROP TABLE IF EXISTS bot_chat');
    ok.q('DROP TABLE IF EXISTS customers');
    ok.q('DROP TABLE IF EXISTS screen_names');
    ok.q('DROP TABLE IF EXISTS consumers');
    ok.q('DROP TABLE IF EXISTS masks');

    ok_c.q('DROP TABLE IF EXISTS comments');

    ok_f.q('DROP TABLE IF EXISTS follows');
  }


  if (is_up) {
    ok.q("CREATE EXTENSION IF NOT EXISTS hstore");

    ok.q(" \
     CREATE TABLE IF NOT EXISTS customers ( \
       id varchar(15) NOT NULL UNIQUE, \
       created_at timestamp default (now() AT TIME ZONE 'UTC'),  \
       trashed_at timestamp default null,   \
       email text,                 \
       passphrase_hash varchar(100) NOT NULL \
    )");

    ok.q( " \
     CREATE TABLE IF NOT EXISTS screen_names ( \
       id varchar(15) NOT NULL UNIQUE,   \
       customer_id varchar(15) NOT NULL, \
       created_at timestamp default (now() AT TIME ZONE 'UTC'),  \
       trashed_at timestamp default null,   \
       screen_name varchar(15) NOT NULL UNIQUE \
    )");

    ok_c.q("CREATE EXTENSION IF NOT EXISTS hstore");
    ok_c.q(" \
      CREATE TABLE IF NOT EXISTS comments ( \
        id                varchar(30) NOT NULL UNIQUE, \
        screen_name_id    varchar(15) NULL NULL, \
        conv_id           varchar(30) NOT NULL UNIQUE, \
        ref_id            varchar(30) NOT NULL UNIQUE, \
        settings          hstore NOT NULL,       \
        details           hstore NOT NULL,       \
        body              text NOT NULL,         \
        created_at        timestamp default (now() AT TIME ZONE 'UTC'),  \
        updated_at        timestamp default null, \
        trashed_at        timestamp default null  \
    )");

    ok_f.q("CREATE EXTENSION IF NOT EXISTS hstore");
    ok_f.q(" \
      CREATE TABLE IF NOT EXISTS follows  ( \
        id                varchar(30) NOT NULL UNIQUE, \
        pub_id            varchar(15) NULL NULL, \
        screen_name_id    varchar(15) NULL NULL, \
        settings          hstore NOT NULL,       \
        details           hstore NOT NULL,       \
        body              text NOT NULL,         \
        created_at        timestamp default (now() AT TIME ZONE 'UTC'),  \
        trashed_at        timestamp default null \
    )");
  }

  ok.run_and_then(function (meta) {
    console.log('Finished migrating the main db.');
    ok_c.run_and_then(function (meta) {
      console.log('Finished migrating the comments db.');
      ok_f.run_and_then(function (meta) {
        console.log('Finished migrating the follows db.');
      });
    });
  });

}); // === show_databases



// ==========================================================================================


console.log('Process id: ' + process.pid);




