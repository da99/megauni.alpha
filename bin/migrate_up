#!/usr/bin/env ruby
# -*- bash -*-
#
#
require "sequel"
puts ""

DB = Sequel.connect(ENV['DATABASE_URL'])

name = ARGV[0]
if !name
  puts "Name required."
  exit 1
end

DB << %!
CREATE TABLE IF NOT EXISTS _schema (
  name      varchar(255) NOT NULL UNIQUE ,
  version   smallint     NOT NULL DEFAULT 0
)
!

rec = DB.fetch("SELECT version FROM _schema WHERE name = :name",  :name=>name).all.first

if !rec
  ds = DB["INSERT INTO _schema (name, version) VALUES (?, ?)", name, 0]
  ds.insert
  rec = {:version=>0}
end

if rec[:version] < 0
  puts "#{name} is at invalid version: #{rec[:version]}\n"
  exit 1
end

def file_to_ver str
  str.split('/').pop.split('-').first.to_i
end

files = `ls Server/#{name}/migrates/*.sql`.split("\n").sort.map { |f|
  ver = file_to_ver(f)
  if ver > rec[:version]
    [ ver, File.read(f).split('-- DOWN').first ]
  end
}.compact

files.each { |pair|
  ver = pair.first
  sql = pair[1]
  DB << sql
  DB[" UPDATE _schema SET version = ? WHERE name = ? ", ver, name].update
  puts "#{name} schema is now : #{ver}"
}

if files.empty?
  puts "#{name} is already the latest: #{rec[:version]}"
end

puts ""

